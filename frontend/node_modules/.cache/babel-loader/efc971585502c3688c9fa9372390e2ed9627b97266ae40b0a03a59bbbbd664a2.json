{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Belle\\\\Downloads\\\\food-list\\\\food-list\\\\src\\\\components\\\\restaurantProfile.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RestaurantProfile = ({\n  restaurants\n}) => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const restaurant = restaurants.find(r => r.id === parseInt(id));\n  if (!restaurant) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Restaurant not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: restaurant.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Location: \", restaurant.location]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Rating: \", restaurant.rating]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Upload Date: \", new Date(restaurant.upload_date).toLocaleDateString()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(RestaurantProfile, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c = RestaurantProfile;\nexport default RestaurantProfile;\nvar _c;\n$RefreshReg$(_c, \"RestaurantProfile\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","RestaurantProfile","restaurants","_s","id","restaurant","find","r","parseInt","children","fileName","_jsxFileName","lineNumber","columnNumber","name","location","rating","Date","upload_date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/Belle/Downloads/food-list/food-list/src/components/restaurantProfile.js"],"sourcesContent":["import React from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst RestaurantProfile = ({ restaurants }) => {\r\n  const { id } = useParams();\r\n  const restaurant = restaurants.find((r) => r.id === parseInt(id));\r\n\r\n  if (!restaurant) {\r\n    return <div>Restaurant not found</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>{restaurant.name}</h1>\r\n      <p>Location: {restaurant.location}</p>\r\n      <p>Rating: {restaurant.rating}</p>\r\n      <p>Upload Date: {new Date(restaurant.upload_date).toLocaleDateString()}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RestaurantProfile;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,iBAAiB,GAAGA,CAAC;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,UAAU,GAAGH,WAAW,CAACI,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACH,EAAE,KAAKI,QAAQ,CAACJ,EAAE,CAAC,CAAC;EAEjE,IAAI,CAACC,UAAU,EAAE;IACf,oBAAOL,OAAA;MAAAS,QAAA,EAAK;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACxC;EAEA,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAAS,QAAA,EAAKJ,UAAU,CAACS;IAAI;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAC1Bb,OAAA;MAAAS,QAAA,GAAG,YAAU,EAACJ,UAAU,CAACU,QAAQ;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtCb,OAAA;MAAAS,QAAA,GAAG,UAAQ,EAACJ,UAAU,CAACW,MAAM;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClCb,OAAA;MAAAS,QAAA,GAAG,eAAa,EAAC,IAAIQ,IAAI,CAACZ,UAAU,CAACa,WAAW,CAAC,CAACC,kBAAkB,CAAC,CAAC;IAAA;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxE,CAAC;AAEV,CAAC;AAACV,EAAA,CAhBIF,iBAAiB;EAAA,QACNH,SAAS;AAAA;AAAAsB,EAAA,GADpBnB,iBAAiB;AAkBvB,eAAeA,iBAAiB;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}