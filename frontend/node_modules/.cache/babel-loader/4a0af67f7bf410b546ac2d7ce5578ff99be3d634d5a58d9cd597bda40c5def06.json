{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Belle\\\\Downloads\\\\food-list\\\\food-list\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport MyNavbar from './components/Navbar';\nimport RestaurantEditModal from './components/RestaurantEditModal';\nimport RestaurantList from './components/RestaurantList';\nimport RestaurantProfile from './components/RestaurantProfile'; // Adjust the import according to your project structure\nimport './styles.css'; // Import your custom CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [restaurants, setRestaurants] = useState([]);\n  const [newRestaurant, setNewRestaurant] = useState(null);\n  const [editing, setEditing] = useState(false);\n  const [currentRestaurant, setCurrentRestaurant] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [activeRowId, setActiveRowId] = useState(null);\n  const itemsPerPage = 10;\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n  const fetchRestaurants = async () => {\n    const response = await axios.get('http://localhost:8080/api/restaurants');\n    setRestaurants(response.data);\n  };\n  const addRestaurant = () => {\n    setNewRestaurant({\n      name: '',\n      location: '',\n      rating: '',\n      upload_date: new Date().toISOString().split('T')[0]\n    });\n  };\n  const saveNewRestaurant = async () => {\n    const response = await axios.post('http://localhost:8080/api/restaurants', newRestaurant);\n    setRestaurants([...restaurants, response.data]);\n    setNewRestaurant(null);\n  };\n  const updateRestaurant = async updatedRestaurant => {\n    updatedRestaurant.upload_date = new Date().toISOString().split('T')[0];\n    const response = await axios.put(`http://localhost:8080/api/restaurants/${updatedRestaurant.id}`, updatedRestaurant);\n    setRestaurants(restaurants.map(restaurant => restaurant.id === updatedRestaurant.id ? response.data : restaurant));\n    setEditing(false);\n  };\n  const deleteRestaurant = async id => {\n    await axios.delete(`http://localhost:8080/api/restaurants/${id}`);\n    setRestaurants(restaurants.filter(restaurant => restaurant.id !== id));\n  };\n  const startEditing = restaurant => {\n    setEditing(true);\n    setCurrentRestaurant(restaurant);\n    setShowModal(true);\n  };\n  const handleSave = updatedRestaurant => {\n    updateRestaurant(updatedRestaurant);\n    setShowModal(false);\n  };\n  const handleClose = () => {\n    setShowModal(false);\n  };\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  const sortByName = () => {\n    let sortedItems;\n    if (sortOrder === 'asc') {\n      sortedItems = [...restaurants].sort((a, b) => a.name.localeCompare(b.name));\n    } else {\n      sortedItems = [...restaurants].sort((a, b) => b.name.localeCompare(a.name));\n    }\n    setRestaurants(sortedItems);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n  const sortByDate = () => {\n    let sortedItems;\n    if (sortOrder === 'asc') {\n      sortedItems = [...restaurants].sort((a, b) => new Date(a.upload_date) - new Date(b.upload_date));\n    } else {\n      sortedItems = [...restaurants].sort((a, b) => new Date(b.upload_date) - new Date(a.upload_date));\n    }\n    setRestaurants(sortedItems);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n  const totalPages = Math.ceil(restaurants.length / itemsPerPage);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(MyNavbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(RestaurantList, {\n          restaurants: restaurants,\n          newRestaurant: newRestaurant,\n          setNewRestaurant: setNewRestaurant,\n          currentPage: currentPage,\n          setCurrentPage: setCurrentPage,\n          totalPages: totalPages,\n          paginate: paginate,\n          sortByName: sortByName,\n          sortByDate: sortByDate,\n          activeRowId: activeRowId,\n          setActiveRowId: setActiveRowId,\n          startEditing: startEditing,\n          deleteRestaurant: deleteRestaurant,\n          addRestaurant: addRestaurant,\n          saveNewRestaurant: saveNewRestaurant\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/restaurants/:id\",\n        element: /*#__PURE__*/_jsxDEV(RestaurantProfile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 49\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RestaurantEditModal, {\n      show: showModal,\n      handleClose: handleClose,\n      restaurant: currentRestaurant,\n      handleSave: handleSave\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"MXBFM+AgzW4h6qC9z7mm2o06XPQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","axios","Container","MyNavbar","RestaurantEditModal","RestaurantList","RestaurantProfile","jsxDEV","_jsxDEV","App","_s","restaurants","setRestaurants","newRestaurant","setNewRestaurant","editing","setEditing","currentRestaurant","setCurrentRestaurant","showModal","setShowModal","currentPage","setCurrentPage","sortOrder","setSortOrder","activeRowId","setActiveRowId","itemsPerPage","fetchRestaurants","response","get","data","addRestaurant","name","location","rating","upload_date","Date","toISOString","split","saveNewRestaurant","post","updateRestaurant","updatedRestaurant","put","id","map","restaurant","deleteRestaurant","delete","filter","startEditing","handleSave","handleClose","paginate","pageNumber","sortByName","sortedItems","sort","a","b","localeCompare","sortByDate","totalPages","Math","ceil","length","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","show","_c","$RefreshReg$"],"sources":["C:/Users/Belle/Downloads/food-list/food-list/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container } from 'react-bootstrap';\nimport MyNavbar from './components/Navbar';\nimport RestaurantEditModal from './components/RestaurantEditModal';\nimport RestaurantList from './components/RestaurantList';\nimport RestaurantProfile from './components/RestaurantProfile'; // Adjust the import according to your project structure\nimport './styles.css'; // Import your custom CSS\n\nconst App = () => {\n  const [restaurants, setRestaurants] = useState([]);\n  const [newRestaurant, setNewRestaurant] = useState(null);\n  const [editing, setEditing] = useState(false);\n  const [currentRestaurant, setCurrentRestaurant] = useState({});\n  const [showModal, setShowModal] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [sortOrder, setSortOrder] = useState('asc');\n  const [activeRowId, setActiveRowId] = useState(null);\n  const itemsPerPage = 10;\n\n  useEffect(() => {\n    fetchRestaurants();\n  }, []);\n\n  const fetchRestaurants = async () => {\n    const response = await axios.get('http://localhost:8080/api/restaurants');\n    setRestaurants(response.data);\n  };\n\n  const addRestaurant = () => {\n    setNewRestaurant({ name: '', location: '', rating: '', upload_date: new Date().toISOString().split('T')[0] });\n  };\n\n  const saveNewRestaurant = async () => {\n    const response = await axios.post('http://localhost:8080/api/restaurants', newRestaurant);\n    setRestaurants([...restaurants, response.data]);\n    setNewRestaurant(null);\n  };\n\n  const updateRestaurant = async (updatedRestaurant) => {\n    updatedRestaurant.upload_date = new Date().toISOString().split('T')[0];\n    const response = await axios.put(`http://localhost:8080/api/restaurants/${updatedRestaurant.id}`, updatedRestaurant);\n    setRestaurants(restaurants.map(restaurant => (restaurant.id === updatedRestaurant.id ? response.data : restaurant)));\n    setEditing(false);\n  };\n\n  const deleteRestaurant = async (id) => {\n    await axios.delete(`http://localhost:8080/api/restaurants/${id}`);\n    setRestaurants(restaurants.filter(restaurant => restaurant.id !== id));\n  };\n\n  const startEditing = (restaurant) => {\n    setEditing(true);\n    setCurrentRestaurant(restaurant);\n    setShowModal(true);\n  };\n\n  const handleSave = (updatedRestaurant) => {\n    updateRestaurant(updatedRestaurant);\n    setShowModal(false);\n  };\n\n  const handleClose = () => {\n    setShowModal(false);\n  };\n\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  const sortByName = () => {\n    let sortedItems;\n    if (sortOrder === 'asc') {\n      sortedItems = [...restaurants].sort((a, b) => a.name.localeCompare(b.name));\n    } else {\n      sortedItems = [...restaurants].sort((a, b) => b.name.localeCompare(a.name));\n    }\n    setRestaurants(sortedItems);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  const sortByDate = () => {\n    let sortedItems;\n    if (sortOrder === 'asc') {\n      sortedItems = [...restaurants].sort((a, b) => new Date(a.upload_date) - new Date(b.upload_date));\n    } else {\n      sortedItems = [...restaurants].sort((a, b) => new Date(b.upload_date) - new Date(a.upload_date));\n    }\n    setRestaurants(sortedItems);\n    setSortOrder(sortOrder === 'asc' ? 'desc' : 'asc');\n  };\n\n  const totalPages = Math.ceil(restaurants.length / itemsPerPage);\n\n  return (\n    <Router>\n      <MyNavbar />\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <RestaurantList\n              restaurants={restaurants}\n              newRestaurant={newRestaurant}\n              setNewRestaurant={setNewRestaurant}\n              currentPage={currentPage}\n              setCurrentPage={setCurrentPage}\n              totalPages={totalPages}\n              paginate={paginate}\n              sortByName={sortByName}\n              sortByDate={sortByDate}\n              activeRowId={activeRowId}\n              setActiveRowId={setActiveRowId}\n              startEditing={startEditing}\n              deleteRestaurant={deleteRestaurant}\n              addRestaurant={addRestaurant}\n              saveNewRestaurant={saveNewRestaurant}\n            />\n          } \n        />\n        <Route path=\"/restaurants/:id\" element={<RestaurantProfile />} />\n      </Routes>\n      <RestaurantEditModal\n        show={showModal}\n        handleClose={handleClose}\n        restaurant={currentRestaurant}\n        handleSave={handleSave}\n      />\n    </Router>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}